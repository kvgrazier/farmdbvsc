@model FarmDBMongoV1.Models.Account

<h2>Account Create</h2>

@using (Html.BeginForm("AccountCreate", "Home", FormMethod.Post, new { @id = "Account" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Account</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="control-label col-md-2"><label>Account Number</label></div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-md-2"><label>Account Name</label></div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccountName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-md-2"><label>TaxFormRef</label></div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TaxFormRef, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TaxFormRef, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-md-2"><label>Active</label></div>
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-md-2"><label>AccountPerson</label></div>
            <div class="col-md-10">
                @Html.DropDownList("AccountPerson1", (IEnumerable<SelectListItem>)ViewBag.accountpersons, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccountPerson.AccountPerson1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-md-2"><label>AccountSubType</label></div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountSubType.AccountSubType1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccountSubType.AccountSubType1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-md-2"><label>SortOrder</label></div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountSubType.SortOrder, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.AccountSubType.SortOrder, "", new { @class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-md-2"><label>AccountType</label></div>
            <div class="col-md-10">
                @Html.DropDownList("AccountType1", (IEnumerable<SelectListItem>)ViewBag.accounttypes, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccountSubType.AccountType.AccountType1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "AccountList", "Home")
</div>
<script type="text/javascript">
    $.validator.addMethod("dateFormat",
        function (value, element) {
            return value.match(/^(?:(0[1-9]|1[012])[\/.](0[1-9]|[12][0-9]|3[01])[\/.](19|20)[0-9]{2})$/);
        }, "Please enter a date in the format mm/dd/yyyy.");

    jQuery.validator.addMethod("numberNotStartWithZero", function (value, element) {
        return value.match(/^[1-9][0-9]*$/);
    }, "Please enter a valid number. (Do not start with zero)");

    $('#Account').validate({
        rules: {
            AccountNumber: {
                required: true,
                numberNotStartWithZero: true,
            },
            'AccountSubType.SortOrder': {
                required: true,
                numberNotStartWithZero: true,
            },
        },
        messages: {
            AccountNumber: {
                required: "Integer Required!!",
                numberNotStartWithZero: "Integer Required, more than one digit.",
            },
            'AccountSubType.SortOrder': {
                required: "Integer Required!!",
                numberNotStartWithZero: "Integer Required, more than one digit.",
            },
        },
        errorPlacement: function (error, element) {
            error.insertAfter(element);
            error.css('color', '#ff0000');
        },
        submitHandler: function (form) {
            form.submit();
        }
    });
</script>