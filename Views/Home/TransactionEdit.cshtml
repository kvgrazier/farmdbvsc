@model FarmDBMongoV1.Models.Transaction

<h2>Transaction Edit</h2>
@using (Html.BeginForm("TransactionEdit", "Home", FormMethod.Post, new { id = "Transaction"}))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("personid", (string)ViewBag.personid);
    @Html.Hidden("firstday", (string)ViewBag.firstday);
    @Html.Hidden("lastday", (string)ViewBag.lastday);
    <div class="form-horizontal">
        <h4>Transaction</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.TransactionID)

        <div class="form-group">
            @Html.LabelFor(model => model.TransactionDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TransactionDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TransactionDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TransactionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TransactionDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TransactionDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AccountNumber1, "AccountNumber1", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AccountNumber1", (IEnumerable<SelectListItem>)ViewBag.accounts, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccountNumber1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Account1Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Account1Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Account1Amount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "TransactionList",  "Home", new {
    personid=ViewBag.personid, firstday=ViewBag.firstday, lastday=ViewBag.lastday })
</div>
<script type="text/javascript">
    $.validator.addMethod("dateFormat",
        function (value, element) {
            return value.match(/^(?:(0[1-9]|1[012])[\/.](0[1-9]|[12][0-9]|3[01])[\/.](19|20)[0-9]{2})$/);
        }, "Please enter a date in the format mm/dd/yyyy.");

    $('#Transaction').validate({
        rules: {
            Account1Amount: {
                required: true,
                number: true,
            },
            TransactionDate: {
                required: true,
                dateFormat: true,
            },
        },
        messages: {
            Account1Amount: {
                required: "Amount Required!!",
                number: "Please enter Payment Amount.",
            },
            TransactionDate: {
                required: "Date Required!!",
                dateFormat: "Date should in the format mm/dd/yyyy.",
            },
        },
        errorPlacement: function (error, element) {
            error.insertAfter(element);
            error.css('color', '#ff0000');
        },
        submitHandler: function (form) {
            form.submit();
        }
    });
</script>